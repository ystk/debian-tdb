diff -ur tdb-1.1.1~svn26294/common/open.c tdb-1.1.1~svn26294-fixed/common/open.c
--- tdb-1.1.1~svn26294/common/open.c	2007-08-11 23:19:24.000000000 +0200
+++ tdb-1.1.1~svn26294-fixed/common/open.c	2008-03-25 22:35:24.000000000 +0100
@@ -141,6 +141,20 @@
 {
 }
 
+/* Clean up spinlock pointer */
+static int tdb_clear_spinlocks(struct tdb_context *tdb)
+{
+	off_t off = (off_t)((char *)&tdb->header.rwlocks
+							- (char *)&tdb->header);
+
+	tdb->header.rwlocks = 0;
+	if (lseek(tdb->fd, off, SEEK_SET) != off
+		|| write(tdb->fd, (void *)&tdb->header.rwlocks,
+				 sizeof(tdb->header.rwlocks)) 
+		!= sizeof(tdb->header.rwlocks))
+		return -1;
+	return 0;
+}
 
 struct tdb_context *tdb_open_ex(const char *name, int hash_size, int tdb_flags,
 				int open_flags, mode_t mode,
@@ -222,9 +236,12 @@
 		goto fail;	/* errno set by tdb_brlock */
 	}
 
+	if ((tdb_flags & TDB_CLEAR_IF_FIRST)) {
+		locked = (tdb->methods->tdb_brlock(tdb, ACTIVE_LOCK, F_WRLCK, F_SETLK, 0, 1) == 0);
+	}
+
 	/* we need to zero database if we are the only one with it open */
-	if ((tdb_flags & TDB_CLEAR_IF_FIRST) &&
-	    (locked = (tdb->methods->tdb_brlock(tdb, ACTIVE_LOCK, F_WRLCK, F_SETLK, 0, 1) == 0))) {
+	if ((tdb_flags & TDB_CLEAR_IF_FIRST) && locked) {
 		open_flags |= O_CREAT;
 		if (ftruncate(tdb->fd, 0) == -1) {
 			TDB_LOG((tdb, TDB_DEBUG_FATAL, "tdb_open_ex: "
@@ -261,11 +278,6 @@
 	if (fstat(tdb->fd, &st) == -1)
 		goto fail;
 
-	if (tdb->header.rwlocks != 0) {
-		TDB_LOG((tdb, TDB_DEBUG_ERROR, "tdb_open_ex: spinlocks no longer supported\n"));
-		goto fail;
-	}
-
 	/* Is it already in the open list?  If so, fail. */
 	if (tdb_already_open(st.st_dev, st.st_ino)) {
 		TDB_LOG((tdb, TDB_DEBUG_ERROR, "tdb_open_ex: "
@@ -285,14 +297,26 @@
 	tdb->inode = st.st_ino;
 	tdb->max_dead_records = 0;
 	tdb_mmap(tdb);
+	if (!locked && tdb->header.rwlocks != 0) {
+		locked = (tdb->methods->tdb_brlock(tdb, ACTIVE_LOCK, F_WRLCK, F_SETLK, 0, 1) == 0);
+	}
+
 	if (locked) {
+		/* Clear up spinlocks if there were any remaining */
+		if (tdb->header.rwlocks != 0 && !tdb->read_only)
+			tdb_clear_spinlocks(tdb);
+
 		if (tdb->methods->tdb_brlock(tdb, ACTIVE_LOCK, F_UNLCK, F_SETLK, 0, 1) == -1) {
 			TDB_LOG((tdb, TDB_DEBUG_ERROR, "tdb_open_ex: "
 				 "failed to take ACTIVE_LOCK on %s: %s\n",
 				 name, strerror(errno)));
 			goto fail;
 		}
+	}
 
+	if (tdb->header.rwlocks != 0) {
+		TDB_LOG((tdb, TDB_DEBUG_ERROR, "tdb_open_ex: spinlocks no longer supported\n"));
+		goto fail;
 	}
 
 	/* We always need to do this if the CLEAR_IF_FIRST flag is set, even if
